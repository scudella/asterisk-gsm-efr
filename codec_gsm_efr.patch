--- include/asterisk/format_cache.h	(Asterisk 13.10.0)
+++ include/asterisk/format_cache.h	(working copy)
@@ -226,2 +226,7 @@
 /*!
+ * \brief Built-in cached GSM-EFR format.
+ */
+extern struct ast_format *ast_format_gsm_efr;
+
+/*!
  * \brief Initialize format cache support within the core.
--- main/codec_builtin.c	(Asterisk 13.10.0)
+++ main/codec_builtin.c	(working copy)
@@ -774,2 +774,20 @@
 
+static int gsm_efr_samples(struct ast_frame *frame)
+{
+	return 160 * (frame->datalen / 31);
+}
+
+static struct ast_codec gsm_efr = {
+	.name = "gsm-efr",
+	.description = "GSM-EFR",
+	.type = AST_MEDIA_TYPE_AUDIO,
+	.sample_rate = 8000,
+	.minimum_ms = 20,
+	.maximum_ms = 300,
+	.default_ms = 20,
+	.minimum_bytes = 31,
+	.samples_count = gsm_efr_samples,
+	.smooth = 1,
+};
+
 #define CODEC_REGISTER_AND_CACHE(codec) \
@@ -806,2 +824,4 @@
 
+	res |= CODEC_REGISTER_AND_CACHE(gsm_efr);
+
 	res |= CODEC_REGISTER_AND_CACHE(g723);
--- main/format_cache.c	(Asterisk 13.10.0)
+++ main/format_cache.c	(working copy)
@@ -220,2 +220,7 @@
 /*!
+ * \brief Built-in cached GSM-EFR format.
+ */
+struct ast_format *ast_format_gsm_efr;
+
+/*!
  * \brief Built-in cached t140 format.
@@ -294,2 +299,4 @@
 
+	ao2_replace(ast_format_gsm_efr, NULL);
+
 	ao2_replace(ast_format_g723, NULL);
@@ -402,2 +409,4 @@
 		ao2_replace(ast_format_testlaw, format);
+	} else if (!strcmp(name, "gsm-efr")) {
+		ao2_replace(ast_format_gsm_efr, format);
 	} else if (!strcmp(name, "g719")) {
--- main/rtp_engine.c	(Asterisk 13.10.0)
+++ main/rtp_engine.c	(working copy)
@@ -2244,2 +2244,4 @@
 	add_static_payload(107, ast_format_opus, 0);
+
+	ast_rtp_engine_load_format(ast_format_gsm_efr);
 
